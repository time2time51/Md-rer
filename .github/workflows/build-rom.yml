name: Build & Release SGDK ROM

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]               # déclenche aussi sur les tags (v0.1.0, v1.0…)
  workflow_dispatch:

permissions:
  contents: write                # nécessaire pour créer une Release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Localiser le dossier projet et res
      - name: Locate project/res folders
        id: paths
        run: |
          echo "project_dir=." >> "$GITHUB_OUTPUT"
          echo "res_dir=res" >> "$GITHUB_OUTPUT"

      # Convertir MP3 -> WAV
      - name: Convert MP3 -> WAV (ffmpeg)
        run: |
          RES_DIR="${{ steps.paths.outputs.res_dir }}"
          if [ -f "$RES_DIR/Intro.mp3" ]; then
            sudo apt-get update
            sudo apt-get install -y ffmpeg
            ffmpeg -y -i "$RES_DIR/Intro.mp3" -ar 22050 -ac 1 "$RES_DIR/intro.wav"
          fi

      # Convertir WAV -> XGM
      - name: Convert WAV -> XGM (xgmtool)
        run: |
          RES_DIR="${{ steps.paths.outputs.res_dir }}"
          if [ -f "$RES_DIR/intro.wav" ]; then
            docker run --rm \
              -v "$GITHUB_WORKSPACE":/m68k \
              -w /m68k/$RES_DIR \
              registry.gitlab.com/doragasu/docker-sgdk:v2.11 \
              xgmtool intro.wav intro.xgm
          fi

      # Donne les droits d'écriture au conteneur Docker (UID 1000 dans l'image SGDK)
      - name: Make workspace writable for container
        run: sudo chown -R 1000:1000 "$GITHUB_WORKSPACE"

      # Compilation avec SGDK
      - name: Build with SGDK (Docker)
        shell: bash
        run: |
          PROJECT_DIR="${{ steps.paths.outputs.project_dir }}"
          docker run --rm \
            -e MAKEFLAGS= \
            -e GNUMAKEFLAGS= \
            -v "$GITHUB_WORKSPACE":/m68k \
            -w "/m68k/$PROJECT_DIR" \
            -t registry.gitlab.com/doragasu/docker-sgdk:v2.11 \
            make -j1

      # Redonne les droits au runner (pour renommer / uploader la ROM)
      - name: Fix back permissions for runner
        run: sudo chown -R $USER:$USER "$GITHUB_WORKSPACE"

      - name: Prepare ROM filename
        id: name
        run: |
          ROM="out/rom.bin"
          if [ ! -f "$ROM" ]; then
            echo "ROM not found"; exit 1
          fi
          REPO="${GITHUB_REPOSITORY##*/}"
          VER="${GITHUB_REF_NAME}"
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            OUT="${REPO}-${VER}.bin"
          else
            OUT="${REPO}.bin"
          fi
          cp "$ROM" "$OUT"
          echo "outname=$OUT" >> "$GITHUB_OUTPUT"

      - name: Upload ROM artifact
        uses: actions/upload-artifact@v4
        with:
          name: rom
          path: ${{ steps.name.outputs.outname }}

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: rom
          path: .
      - name: Create GitHub Release and attach ROM
        uses: softprops/action-gh-release@v2
        with:
          files: ./*.bin
          generate_release_notes: true
