name: Build & Release SGDK ROM

on:
  push:
    branches: [ "main" ]         # build normal sur main
    tags: [ "v*" ]               # ⚠️ déclenche aussi sur les tags (v0.1.0, v1.0, etc.)
  workflow_dispatch:

permissions:
  contents: write                # ⚠️ nécessaire pour créer la Release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Donner les droits d'écriture au conteneur
      - name: Make workspace writable for container
        run: sudo chown -R 1000:1000 "$GITHUB_WORKSPACE"

      - name: Build with SGDK (Docker)
        run: |
          docker run --rm \
            -v "$GITHUB_WORKSPACE":/m68k \
            -t registry.gitlab.com/doragasu/docker-sgdk:v2.11

      # Renommer le binaire avec le nom du repo + la version si on est sur un tag
      - name: Prepare ROM filename
        id: name
        run: |
          ROM="out/rom.bin"
          if [ ! -f "$ROM" ]; then
            echo "ROM not found"; exit 1
          fi
          REPO="${GITHUB_REPOSITORY##*/}"            # ex: Md-rer
          VER="${GITHUB_REF_NAME}"                   # ex: v0.1.0 ou main
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            OUT="${REPO}-${VER}.bin"
          else
            OUT="${REPO}.bin"
          fi
          cp "$ROM" "$OUT"
          echo "outname=$OUT" >> "$GITHUB_OUTPUT"

      - name: Upload ROM artifact
        uses: actions/upload-artifact@v4
        with:
          name: rom
          path: ${{ steps.name.outputs.outname }}

  release:
    # Ne lance ce job QUE si on est sur un tag
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: rom
          path: .
      - name: Create GitHub Release and attach ROM
        uses: softprops/action-gh-release@v2
        with:
          files: ./*.bin
          generate_release_notes: true