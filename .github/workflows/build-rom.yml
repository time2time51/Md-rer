name: Build & Release SGDK ROM

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Localiser le projet et res/ (racine ou Md-rer/)
      - name: Locate project/res folders
        id: paths
        shell: bash
        run: |
          if [ -d "Md-rer/res" ]; then
            PROJECT_DIR="Md-rer"
            RES_DIR="Md-rer/res"
          elif [ -d "res" ]; then
            PROJECT_DIR="."
            RES_DIR="res"
          else
            echo "ERREUR: dossier res/ introuvable (ni ./res ni ./Md-rer/res)."; exit 1
          fi
          echo "project_dir=$PROJECT_DIR" >> $GITHUB_OUTPUT
          echo "res_dir=$RES_DIR" >> $GITHUB_OUTPUT
          echo "Project dir = $PROJECT_DIR"
          echo "Res dir     = $RES_DIR"
          ls -la "$RES_DIR" || true

      # 2) CONVERSION ffmpeg AVANT le chown
      - name: Convert MP3 -> WAV (ffmpeg)
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          RES_DIR="${{ steps.paths.outputs.res_dir }}"
          INTRO_MP3=$(ls "$RES_DIR" | grep -iE '^intro\.mp3$' || true)
          if [ -z "$INTRO_MP3" ]; then
            echo "ERREUR: Intro.mp3 introuvable dans $RES_DIR"; ls -la "$RES_DIR"; exit 1
          fi
          echo "Trouve: $INTRO_MP3"
          ffmpeg -y -i "$RES_DIR/$INTRO_MP3" -ar 22050 -ac 1 "$RES_DIR/intro.wav"

      # 3) Droits d'écriture pour Docker (UID 1000)
      - name: Make workspace writable for container
        run: sudo chown -R 1000:1000 "$GITHUB_WORKSPACE"

      # 4) WAV -> XGM via SGDK (dans Docker)
      - name: Convert WAV -> XGM (xgmtool)
        shell: bash
        run: |
          RES_DIR="${{ steps.paths.outputs.res_dir }}"
          docker run --rm \
            -v "$GITHUB_WORKSPACE":/m68k \
            -w /m68k \
            -t registry.gitlab.com/doragasu/docker-sgdk:v2.11 \
            java -jar /sgdk/tools/xgmtool.jar "$RES_DIR/intro.wav" "$RES_DIR/intro.xgm"
          echo "intro.xgm genere dans $RES_DIR:"
          ls -la "$RES_DIR" || true

      # 5) Build du projet (appel explicite à make)
            - name: Build with SGDK (Docker)
        shell: bash
        run: |
          PROJECT_DIR="${{ steps.paths.outputs.project_dir }}"
          docker run --rm \
            -e MAKEFLAGS= \
            -e GNUMAKEFLAGS= \
            -v "$GITHUB_WORKSPACE":/m68k \
            -w "/m68k/$PROJECT_DIR" \
            -t registry.gitlab.com/doragasu/docker-sgdk:v2.11 \
            make -j1

      # 6) Rendre les fichiers au runner (pour renommer/uploader)
      - name: Fix back permissions for runner
        run: sudo chown -R $USER:$USER "$GITHUB_WORKSPACE"

      - name: Prepare ROM filename
        id: name
        shell: bash
        run: |
          PROJECT_DIR="${{ steps.paths.outputs.project_dir }}"
          ROM="$PROJECT_DIR/out/rom.bin"
          if [ ! -f "$ROM" ]; then
            echo "ROM not found at $ROM"; exit 1
          fi
          REPO="${GITHUB_REPOSITORY##*/}"
          VER="${GITHUB_REF_NAME}"
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            OUT="${REPO}-${VER}.bin"
          else
            OUT="${REPO}.bin"
          fi
          cp "$ROM" "$OUT"
          echo "outname=$OUT" >> "$GITHUB_OUTPUT"

      - name: Upload ROM artifact
        uses: actions/upload-artifact@v4
        with:
          name: rom
          path: ${{ steps.name.outputs.outname }}

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: rom
          path: .
      - name: Create GitHub Release and attach ROM
        uses: softprops/action-gh-release@v2
        with:
          files: ./*.bin
          generate_release_notes: true
